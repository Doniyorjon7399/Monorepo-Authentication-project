generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  author_id Int
  post_id   Int
  users     users    @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_author_id_users_id")
  posts     posts    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comments_post_id_posts_id")
}

model groups {
  id              Int               @id @default(autoincrement())
  name            String
  users_to_groups users_to_groups[]
}

model posts {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime   @default(now()) @db.Timestamp(5)
  author_id Int
  comments  comments[]
  users     users      @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "posts_author_id_users_id_fk")
}

model profile_info {
  id      Int   @id @default(autoincrement())
  user_id Int?
  metada  Json?
}

model users {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  name            String
  password        String
  lastname        String?
  comments        comments[]
  posts           posts[]
  users_to_groups users_to_groups[]
}

model users_to_groups {
  id       Int    @id @default(autoincrement())
  user_id  Int
  group_id Int
  groups   groups @relation(fields: [group_id], references: [id])
  users    users  @relation(fields: [user_id], references: [id])
}
